version: '3'

vars:
  RELEASE_CONFIG: .release.yml

tasks:
  install:
    desc: Install required tools
    cmds:
      - brew install yq gettext gh librsvg

  icons:
    desc: Regenerate extension icons from SVG
    cmds:
      - mkdir -p icons
      - rsvg-convert -h 16 icons/icon.svg > icons/icon16.png
      - rsvg-convert -h 48 icons/icon.svg > icons/icon48.png
      - rsvg-convert -h 128 icons/icon.svg > icons/icon128.png
    sources:
      - icons/icon.svg
    generates:
      - icons/icon16.png
      - icons/icon48.png
      - icons/icon128.png

  screenshot:
    desc: Create screenshot of the popup window
    cmds:
      - screencapture -i screenshot.png
      - sips -Z 600 screenshot.png

  build:
    desc: Build the extension
    deps: [icons]
    cmds:
      - echo "Building extension..."
      - rm -rf dist
      - mkdir -p dist
      - cp -r manifest.json popup.html popup.js content.js background.js icons dist/
      - cd dist && zip -r rhythmklk.zip . -x "*.git*" -x "node_modules/*" -x "*.zip" -x "test.html" -x "flash-test.html" -x "taskfile.yml" -x ".release.yml"
      - mv dist/rhythmklk.zip .

  clean:
    desc: Clean generated files
    cmds:
      - rm -f icons/icon16.png icons/icon48.png icons/icon128.png
      - rm -rf dist
      - rm -f rhythmklk.zip screenshot.png

  release:
    desc: Create and publish a new release
    deps: [build]
    vars:
      VERSION:
        sh: yq eval '.version' {{.RELEASE_CONFIG}}
    cmds:
      - |
        VERSION="{{.VERSION}}" && \
        export VERSION && \
        TITLE=$(yq eval '.title' {{.RELEASE_CONFIG}} | envsubst) && \
        NOTES=$(yq eval '.notes' {{.RELEASE_CONFIG}} | envsubst) && \
        gh release create v${VERSION} rhythmklk.zip \
          --title "$TITLE" \
          --notes "$NOTES"

  release:dev:
    desc: Create a development pre-release
    deps: [build]
    vars:
      VERSION:
        sh: yq eval '.dev.version' {{.RELEASE_CONFIG}}
    cmds:
      - |
        VERSION="{{.VERSION}}" && \
        export VERSION && \
        TITLE=$(yq eval '.dev.title' {{.RELEASE_CONFIG}} | envsubst) && \
        NOTES=$(yq eval '.dev.notes' {{.RELEASE_CONFIG}} | envsubst) && \
        gh release create v${VERSION} rhythmklk.zip \
          --prerelease \
          --title "$TITLE" \
          --notes "$NOTES"

  default:
    desc: Show available tasks
    cmds:
      - task --list 